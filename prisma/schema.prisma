// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url = env("DATABASE_URL") // sqlite://./dev.db
}

model User {
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  documentType String
  documentNumber String @unique
  balance Int @default(100000)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  transactionsSent Transaction[] @relation("payerTransactions")
  transactionsReceived Transaction[] @relation("payeeTransactions")

  @@index([email])
  @@index([documentNumber])
}

model Transaction {
  id String @id @default(uuid())
  value Int
  payerId String
  payeeId String
  payer   User @relation("payerTransactions", fields: [payerId], references: [id])
  payee   User @relation("payeeTransactions", fields: [payeeId], references: [id])
  status String
  idempotencyKey String? @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([createdAt])
}

model NotificationOutbox {
  id String @id @default(uuid())
  email String
  message String
  status String
  attempts Int @default(0)
  lastError String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([status, createdAt])
}